{
  "commands": [
    // remove "rem" from lines below to uncomment

    // multi-device examples
    // one device should host, and one device should join
    "rem host changetoyouralias",
    "rem join changetoyouralias",
    "rem runmultidevicetests",
    "rem rt mp\\MP_JoinLobbyViaActivity.lua",
    "rem rt multiplayerManager\\MPM_JoinLobbyViaActivity.lua",
    "rem rt multiplayerManager\\MPM_JoinFixedGameSession.lua",
    "rem rt multiplayerManager\\MPM_Match.lua",
    "rem rt multiplayerManager\\MPM_Invite.lua",
    "rem rt multiplayerManager\\MPM_InviteUI.lua",

    // fault injection
    "rem faultinjection options 1 7 1", // faultinjection options failFreq freqChangeSpeed freqChangeAmount
    "rem faultinjection user", // "faultinjection" enables specific fault injection on specific features
    "rem faultinjection http", // "faultinjection" enables specific fault injection on specific features

    // mem hook tracking
    "rem memtrack true", // result logged after runtests or rt command ends

    // single-device command examples
    "rem runbarescript misc\\global_state.lua", // "runbarescript" will run the script without any XBL/XAL initializtion for special test needs
    "rem rt achievements\\achievements_progress_notification.lua",
    "rem rt achievements\\achievements_manager_performance_test.lua",
    "rem rt achievements\\achievements_manager_update_achievements.lua",
    "rem rt gdk-gameinvite\\game-invite.lua", // rt will run a single test
    "rem repeat social\\social_manager_2.lua", // "repeat" will repeat this single test without cleanup forever
    "rem loop", // "loop" will loop the entire cmds.json file including cleanup, forever
    "rem rts",
    "rt presence/presence-cpp.lua"
  ]
}
